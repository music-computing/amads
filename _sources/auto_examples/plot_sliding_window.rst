
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_sliding_window.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_sliding_window.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_sliding_window.py:


Sliding window analysis
=======================

This example demonstrates how to perform a sliding window analysis on a musical
score to compute the mean pitch height (mean key_num) from each window and plot
the result.

.. GENERATED FROM PYTHON SOURCE LINES 11-12

First, we'll import the required modules.

.. GENERATED FROM PYTHON SOURCE LINES 12-19

.. code-block:: Python


    import matplotlib.pyplot as plt

    from amads.algorithms.slice.window import sliding_window
    from amads.io.readscore import import_midi
    from amads.music import example








.. GENERATED FROM PYTHON SOURCE LINES 20-21

Load an example MIDI file and import it using partitura.

.. GENERATED FROM PYTHON SOURCE LINES 21-25

.. code-block:: Python


    midi_file = example.fullpath("midi/twochan.mid")
    my_score = import_midi(midi_file, show=False)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    In readscore: importing prettymidi-based midi reader.




.. GENERATED FROM PYTHON SOURCE LINES 26-28

Set up parameters for the sliding window analysis. We'll use a window size of
4.0 (one bar) and a small step size of 0.01 for smooth results.

.. GENERATED FROM PYTHON SOURCE LINES 28-32

.. code-block:: Python


    size = 4.0  # one bar
    step = 0.01








.. GENERATED FROM PYTHON SOURCE LINES 33-34

Flatten the score to get a single sequence of notes.

.. GENERATED FROM PYTHON SOURCE LINES 34-37

.. code-block:: Python


    flattened_score = my_score.flatten(collapse=True)








.. GENERATED FROM PYTHON SOURCE LINES 38-40

Perform the sliding window analysis. Each window will contain notes that are
sounding within its time boundaries.

.. GENERATED FROM PYTHON SOURCE LINES 40-47

.. code-block:: Python


    windows = sliding_window(
        flattened_score,
        size=size,
        step=step,
        align="center",
    )







.. GENERATED FROM PYTHON SOURCE LINES 48-50

Compute the duration-weighted mean pitch height for each window.
For empty windows, we'll use None as the default value.

.. GENERATED FROM PYTHON SOURCE LINES 50-63

.. code-block:: Python

    times = []
    mean_pitch_heights = []
    for window in windows:
        times.append(window.time)

        if len(window.content) == 0:
            mean_pitch_heights.append(None)
            continue

        total_duration = sum(note.duration for note in window.content)
        weighted_sum = sum(note.key_num * note.duration for note in window.content)
        mean_pitch_heights.append(weighted_sum / total_duration)








.. GENERATED FROM PYTHON SOURCE LINES 64-65

Finally, plot the results to visualize how mean pitch height changes over time.

.. GENERATED FROM PYTHON SOURCE LINES 65-72

.. code-block:: Python


    plt.figure(figsize=(10, 6))
    plt.plot(times, mean_pitch_heights)
    plt.xlabel("Time")
    plt.ylabel("Mean pitch height")
    plt.show()




.. image-sg:: /auto_examples/images/sphx_glr_plot_sliding_window_001.png
   :alt: plot sliding window
   :srcset: /auto_examples/images/sphx_glr_plot_sliding_window_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.448 seconds)


.. _sphx_glr_download_auto_examples_plot_sliding_window.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_sliding_window.ipynb <plot_sliding_window.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_sliding_window.py <plot_sliding_window.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_sliding_window.zip <plot_sliding_window.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
